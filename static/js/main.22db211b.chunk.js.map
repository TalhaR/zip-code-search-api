{"version":3,"sources":["components/City.jsx","components/ZipSearchField.jsx","App.js","index.js"],"names":["City","State","Lat","Long","EstimatedPopulation","TotalWages","className","ZipSearchField","zipChanged","type","onChange","App","useState","zipCode","setZipCode","cities","setCities","useEffect","a","linkToAPI","axios","get","response","data","console","log","status","handleSearch","e","target","value","length","match","map","city","RecordNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAuBeA,MArBf,YAA4E,IAA5DA,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,oBAAqBC,EAAc,EAAdA,WACzD,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6CAASN,EAAT,aAAkBC,GAAlB,SAEJ,8BACI,+BACI,oDAAgBA,MAChB,wDAAoBC,EAApB,aAA4BC,EAA5B,QACA,+BACK,IADL,oCAEkCC,MAElC,0DAAsBC,eCH3BE,MAXf,YAAyC,IAAfC,EAAc,EAAdA,WACtB,OACI,qBAAKF,UAAU,MAAf,SACI,sBAAKA,UAAU,MAAf,UACI,+CACA,uBAAOG,KAAK,OAAOC,SAAUF,UCqE9BG,MAtEf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACJC,EADI,KACKC,EADL,OAEiBF,mBAAS,IAF1B,mBAEJG,EAFI,KAEIC,EAFJ,KAoDX,OAhDAC,qBAAU,YACY,uCAAG,8BAAAC,EAAA,yDACD,KAAZL,EADa,wDAGbM,EAAY,yCAA2CN,EAH1C,kBAMQO,IAAMC,IAAIF,GANlB,OAMTG,EANS,OAObN,EAAUM,EAASC,MAPN,kDAST,KAAMD,WACNE,QAAQC,IAAI,KAAMH,SAASC,MAC3BC,QAAQC,IAAI,KAAMH,SAASI,SAXlB,0DAAH,qDAelBC,KACD,CAACd,IAgCA,sBAAKP,UAAU,MAAf,UACI,wBAAQA,UAAU,aAAlB,SACI,qBAAKA,UAAU,yCAAf,SACI,qDAIR,qBAAKA,UAAU,qCAAf,SACI,sBAAKA,UAAU,QAAf,UACI,cAAC,EAAD,CAAgBE,WAvCb,SAACoB,GAEhB,GAA8B,IAA1BA,EAAEC,OAAOC,MAAMC,OAGf,OAFAjB,EAAW,SACXE,EAAU,IAMd,IAAKY,EAAEC,OAAOC,MAAME,MADP,YAIT,OAFAlB,EAAW,SACXE,EAAU,IAIdF,EAAWc,EAAEC,OAAOC,UAIE,IAAlBf,EAAOgB,OACA,aAEAhB,EAAOkB,KAAI,SAACC,GACf,OAAO,cAAC,EAAD,eAAkCA,GAAvBA,EAAKC,0BChDvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.22db211b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction City({ City, State, Lat, Long, EstimatedPopulation, TotalWages }) {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"cardHeader\">\r\n                <h2> {`${City}, ${State}`} </h2>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    <li> {`State: ${State}`}</li>\r\n                    <li> {`Location: (${Lat}, ${Long})`}</li>\r\n                    <li>\r\n                        {\" \"}\r\n                        {`Population (estiminated): ${EstimatedPopulation}`}\r\n                    </li>\r\n                    <li> {`Total Wages: ${TotalWages}`}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default City;\r\n","import React from \"react\";\r\n\r\nfunction ZipSearchField({ zipChanged }) {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <label>Zip Code: </label>\r\n                <input type=\"text\" onChange={zipChanged} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ZipSearchField;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport City from \"./components/City\";\r\nimport ZipSearchField from \"./components/ZipSearchField\";\r\n\r\nfunction App() {\r\n    const [zipCode, setZipCode] = useState(\"\");\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const handleSearch = async () => {\r\n            if (zipCode === \"\") return; //deals with the inital load so we don't call API\r\n\r\n            let linkToAPI = \"https://ctp-zip-api.herokuapp.com/zip/\" + zipCode;\r\n\r\n            try {\r\n                let response = await axios.get(linkToAPI);\r\n                setCities(response.data);\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    console.log(error.response.data); //Not Found\r\n                    console.log(error.response.status); //404\r\n                }\r\n            }\r\n        };\r\n        handleSearch();\r\n    }, [zipCode]);\r\n\r\n    const zipHandler = (e) => {\r\n        // checking to see if there are 5 digits\r\n        if (e.target.value.length !== 5) {\r\n            setZipCode(\"\");\r\n            setCities([]);\r\n            return;\r\n        }\r\n\r\n        // checking to see if everything is a number\r\n        const nums = /^[0-9]+$/;\r\n        if (!e.target.value.match(nums)) {\r\n            setZipCode(\"\");\r\n            setCities([]);\r\n            return;\r\n        }\r\n\r\n        setZipCode(e.target.value);\r\n    };\r\n\r\n    const generateCities = () => {\r\n        if (cities.length === 0) {\r\n            return \"No Results\";\r\n        } else {\r\n            return cities.map((city) => {\r\n                return <City key={city.RecordNumber} {...city} />;\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <div className=\"col-4 justify-content-center container\">\r\n                    <h2>Zip Code Search</h2>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"row justify-content-center results\">\r\n                <div className=\"col-4\">\r\n                    <ZipSearchField zipChanged={zipHandler} />\r\n                    {generateCities()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}